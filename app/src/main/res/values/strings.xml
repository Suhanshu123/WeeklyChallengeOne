<resources>
    <string name="app_name">WeeklyChallengeOne</string>

    <string name="constraint_layout">
        The ConstraintLayout is a powerful new class. It allows us to lay out child views using ‘constraints’ to define position based relationships between different views
        found in our layout.

        The aim of the ConstraintLayout is to help reduce the number of nested views, which will improve the
        performance of our layout files.
    </string>

    <string name="linear_layout">
       The LinearLayout is the most basic layout, and it arranges its elements sequentially, either horizontally or vertically.
        The orientation attribute is used to arrange its children either in horizontal or vertical order. The valid values
        for this attribute are horizontal and vertical. If the value of the android:orientation attribute is set to vertical,
        the children in the linear layout are arranged in a column layout, one below the other and vice-versa.
    </string>

    <string name="relative_layout">
       RelativeLayout is a view group that displays child views in relative positions. The position of each view can be specified
        as relative to sibling elements (such as to the left-of or below another view) or in positions relative to the parent
        RelativeLayout area (such as aligned to the bottom, left or center).

        A RelativeLayout is a very powerful utility for designing a user interface because it can eliminate nested view groups
        and keep your layout hierarchy flat, which improves performance. If you find yourself using several nested LinearLayout
        groups, you may be able to replace them with a single RelativeLayout
    </string>

    <string name="card_view">
Card View is a new widget for Android, which can be used to display a card sort of a layout in android. As you may know
        Android material design is inspired from paper and ink concept. Mostly it displays views on top of each other, with
        shadows. In simple terms, Android CardView is such a view which has all material design properties, most importantly
        showing shadows according the elevation. The best part about this view is that it extends FrameLayout and it can be
        displayed on all the platforms of android since it’s available through the Support v7 library.
    </string>

    <string name="scroll_view">
A view group that allows the view hierarchy placed within it to be scrolled. Scroll view may have only one direct child placed
        within it. To add multiple views within the scroll view, make the direct child you add a view group, for example
        LinearLayout, and place additional views within that LinearLayout.

Scroll view supports vertical scrolling only. For horizontal scrolling, use HorizontalScrollView instead.
    </string>

    <string name="grid_view">
Android GridView shows items in two-dimensional scrolling grid (rows and columns) and the grid items are not necessarily
        predetermined but they automatically inserted to the layout using a ListAdapter.
        An adapter actually bridges between UI components and the data source that fill data into UI Component.
        Adapter can be used to supply the data to like spinner, list view, grid view etc.
    </string>
</resources>
